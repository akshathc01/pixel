{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\nexport const initializeLoginFramework = () => {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  } else {\n    firebase.app();\n  }\n};\nexport const handleGoogleSignIn = () => {\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n  return firebase.auth().signInWithPopup(googleProvider).then(res => handleResponse(res)).catch(err => {\n    console.log(err);\n    console.log(err.message);\n  });\n};\nexport const handleSignOut = () => {\n  return firebase.auth().signOut().then(res => {\n    const signedOutUser = {\n      isSignedIn: false,\n      name: '',\n      email: '',\n      photo: '',\n      error: '',\n      success: false\n    };\n    return signedOutUser;\n  }).catch(err => {\n    console.log(err);\n    console.log(err.message);\n  });\n};\nexport const createUserWithEmailAndPassword = (name, email, password) => {\n  return firebase.auth().createUserWithEmailAndPassword(email, password).then(res => {\n    updateUserName(name);\n    return handleResponse(res);\n  }).catch(error => {\n    const newUserInfo = {};\n    newUserInfo.error = error.message;\n    newUserInfo.success = false;\n    return newUserInfo;\n  });\n};\nexport const signInWithEmailAndPassword = (email, password) => {\n  return firebase.auth().signInWithEmailAndPassword(email, password).then(res => handleResponse(res)).catch(function (error) {\n    const newUserInfo = {};\n    newUserInfo.error = error.message;\n    newUserInfo.success = false;\n    return newUserInfo;\n  });\n};\n\nconst handleResponse = res => {\n  const {\n    displayName,\n    photoURL,\n    email\n  } = res.user;\n  const signedInUser = {\n    isSignedIn: true,\n    name: displayName,\n    email: email,\n    photo: photoURL || \"https://i.ibb.co/5GzXkwq/user.png\"\n  };\n  return signedInUser;\n};\n\nconst updateUserName = name => {\n  const user = firebase.auth().currentUser;\n  user.updateProfile({\n    displayName: name\n  }).then(function () {\n    console.log('user name updated successfully');\n  }).catch(function (error) {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Login/LoginForm.js"],"names":["firebase","firebaseConfig","initializeLoginFramework","apps","length","initializeApp","app","handleGoogleSignIn","googleProvider","auth","GoogleAuthProvider","signInWithPopup","then","res","handleResponse","catch","err","console","log","message","handleSignOut","signOut","signedOutUser","isSignedIn","name","email","photo","error","success","createUserWithEmailAndPassword","password","updateUserName","newUserInfo","signInWithEmailAndPassword","displayName","photoURL","user","signedInUser","currentUser","updateProfile"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\n\r\nexport const initializeLoginFramework = () => {\r\n    if (!firebase.apps.length) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    } else {\r\n        firebase.app();\r\n    }\r\n\r\n}\r\n\r\nexport const handleGoogleSignIn = () => {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n    return firebase.auth().signInWithPopup(googleProvider)\r\n        .then(res => handleResponse(res))\r\n\r\n        .catch(err => {\r\n            console.log(err);\r\n            console.log(err.message);\r\n        })\r\n}\r\n\r\nexport const handleSignOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(res => {\r\n            const signedOutUser = {\r\n                isSignedIn: false,\r\n                name: '',\r\n                email: '',\r\n                photo: '',\r\n                error: '',\r\n                success: false\r\n            }\r\n            return signedOutUser;\r\n        }).catch(err => {\r\n            console.log(err)\r\n            console.log(err.message)\r\n        });\r\n}\r\n\r\nexport const createUserWithEmailAndPassword = (name, email, password) => {\r\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then(res => {\r\n            updateUserName(name);\r\n            return handleResponse(res);\r\n\r\n        })\r\n        .catch(error => {\r\n            const newUserInfo = {};\r\n            newUserInfo.error = error.message;\r\n            newUserInfo.success = false;\r\n            return newUserInfo;\r\n        });\r\n}\r\n\r\nexport const signInWithEmailAndPassword = (email, password) => {\r\n    return firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then(res => handleResponse(res))\r\n        .catch(function (error) {\r\n            const newUserInfo = {};\r\n            newUserInfo.error = error.message;\r\n            newUserInfo.success = false;\r\n            return newUserInfo;\r\n        });\r\n}\r\n\r\nconst handleResponse = (res) => {\r\n    const { displayName, photoURL, email } = res.user;\r\n    const signedInUser = {\r\n        isSignedIn: true,\r\n        name: displayName,\r\n        email: email,\r\n        photo: photoURL || \"https://i.ibb.co/5GzXkwq/user.png\"\r\n    }\r\n    return signedInUser;\r\n}\r\n\r\nconst updateUserName = name => {\r\n    const user = firebase.auth().currentUser;\r\n\r\n    user.updateProfile({\r\n        displayName: name\r\n    }).then(function () {\r\n        console.log('user name updated successfully')\r\n    }).catch(function (error) {\r\n        console.log(error)\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}