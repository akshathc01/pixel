[{"/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/index.js":"1","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/App.js":"2","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/reportWebVitals.js":"3","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Dashboard/Dashboard.js":"4","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Login/Login.js":"5","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Home/Home/Home.js":"6","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/PrivateRoute/PrivateRoute.js":"7","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/AddImage/AddImage.js":"8","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Dashboard/PrivateImg.js":"9","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Dashboard/PublicImg.js":"10","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Login/firebase.config.js":"11","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Login/LoginForm.js":"12","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Home/Navbar/Navbar.js":"13","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Home/Header/Header.js":"14","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/GetCommunityImages/GetCommunityImages.js":"15","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/firebase/index.js":"16","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/ShowCommunityImages/ShowCommunityImages.js":"17"},{"size":288,"mtime":1631391406000,"results":"18","hashOfConfig":"19"},{"size":1259,"mtime":1631450566000,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499198500000,"results":"21","hashOfConfig":"19"},{"size":2159,"mtime":1631453982000,"results":"22","hashOfConfig":"19"},{"size":6700,"mtime":1631863356402,"results":"23","hashOfConfig":"19"},{"size":373,"mtime":1631450566000,"results":"24","hashOfConfig":"19"},{"size":749,"mtime":1631345936000,"results":"25","hashOfConfig":"19"},{"size":5320,"mtime":1631864858744,"results":"26","hashOfConfig":"19"},{"size":1710,"mtime":1631454176000,"results":"27","hashOfConfig":"19"},{"size":1681,"mtime":1631454264000,"results":"28","hashOfConfig":"19"},{"size":403,"mtime":1631391264000,"results":"29","hashOfConfig":"19"},{"size":2559,"mtime":1631391304000,"results":"30","hashOfConfig":"19"},{"size":2038,"mtime":1631450566000,"results":"31","hashOfConfig":"19"},{"size":225,"mtime":1631450566000,"results":"32","hashOfConfig":"19"},{"size":1593,"mtime":1631450586000,"results":"33","hashOfConfig":"19"},{"size":528,"mtime":1631238618000,"results":"34","hashOfConfig":"19"},{"size":459,"mtime":1631450566000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"l6k1xd",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/index.js",[],["77","78"],"/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/App.js",[],"/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/reportWebVitals.js",[],"/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Dashboard/Dashboard.js",["79"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { UserContext } from '../../App';\r\nimport Navbar from '../Home/Navbar/Navbar';\r\nimport PrivateImg from './PrivateImg';\r\nimport PublicImg from './PublicImg';\r\n\r\nconst Dashboard = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const [publicImg, setPublicImg] = useState([])\r\n    const [privateImg, setPrivateImg] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3002/getCommunity?email=' + loggedInUser.email)\r\n            .then(res => res.json())\r\n            .then(data => setPublicImg(data))\r\n    }, [loggedInUser.email])\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3002/getPrivate?email=' + loggedInUser.email)\r\n            .then(res => res.json())\r\n            .then(data => setPrivateImg(data))\r\n    }, [loggedInUser.email])\r\n\r\n    return (\r\n        <div data-testid=\"test-Dashboard\">\r\n            <div style={{ background: \"#12161f\", height: \"950px\" }} className=\"text-light\">\r\n                <Navbar />\r\n                <h1 className=\" pt-5 text-center\">Hi {loggedInUser.name} , Here Is your Uploaded Images.</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-6\">\r\n                        <h1 className=\"text-center\">Public Images</h1>\r\n                        <div className=\"row d-flex justify-content-center\">\r\n                            {\r\n                                publicImg.map(upload => <PublicImg upload={upload} ></PublicImg>)\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <h1 className=\"text-center\">Private Images</h1>\r\n                        <div className=\"row d-flex justify-content-center\">\r\n                            {\r\n                                privateImg.map(upload => <PrivateImg upload={upload} ></PrivateImg>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Login/Login.js",["80","81","82"],"import React, { useContext, useState } from 'react';\r\nimport firebase from \"firebase/app\"\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport Navbar from '../Home/Navbar/Navbar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { UserContext } from '../../App';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { createUserWithEmailAndPassword, handleGoogleSignIn, initializeLoginFramework, signInWithEmailAndPassword } from './LoginForm';\r\n\r\nimport './Login.css'\r\n\r\nconst Login = () => {\r\n    if (!firebase.apps.length) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    } else {\r\n        firebase.app();\r\n    }\r\n\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n\r\n\r\n\r\n    const [newUser, setNewUser] = useState(false);\r\n    const [user, setUser] = useState({\r\n        isSignedIn: false,\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n    initializeLoginFramework();\r\n\r\n\r\n    const googleSignIn = () => {\r\n        handleGoogleSignIn()\r\n            .then(res => {\r\n                handleResponse(res, true);\r\n            })\r\n    }\r\n\r\n    const handleResponse = (res, redirect) => {\r\n        setUser(res);\r\n        setLoggedInUser(res);\r\n        if (redirect) {\r\n            history.replace(from);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        let isFieldValid = true;\r\n        if (e.target.name === 'email') {\r\n            isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\r\n        }\r\n        else { <h1>jdhsahdkj</h1> }\r\n        if (e.target.name === 'password') {\r\n            const isPasswordValid = e.target.value.length > 6;\r\n            const passwordHasNumber = /\\d{1}/.test(e.target.value);\r\n            isFieldValid = isPasswordValid && passwordHasNumber;\r\n        }\r\n        if (isFieldValid) {\r\n            const newUserInfo = { ...user };\r\n            newUserInfo[e.target.name] = e.target.value;\r\n            setUser(newUserInfo);\r\n        }\r\n    }\r\n    const handleSubmit = (e) => {\r\n        if (newUser && user.email && user.password) {\r\n            createUserWithEmailAndPassword(user.name, user.email, user.password)\r\n                .then(res => {\r\n                    handleResponse(res, true);\r\n                })\r\n        }\r\n\r\n        if (!newUser && user.email && user.password) {\r\n            signInWithEmailAndPassword(user.email, user.password)\r\n                .then(res => {\r\n                    handleResponse(res, true);\r\n                })\r\n        }\r\n        e.preventDefault();\r\n\r\n    }\r\n    return (\r\n        <div data-testid=\"test-Login\" className=\"logIn\">\r\n            <Navbar></Navbar>\r\n            <div className=\" pt-5 text-light\">\r\n                <div className=\"text-center\">\r\n                    <h1 className=\"text-light px-5 mx-5\">Welcome To Pixel!</h1>\r\n                </div>\r\n\r\n                <div className=\"row d-flex align-items-center justify-content-center\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"d-flex align-items-center justify-content-center pt-5\">\r\n                            <div id=\"booking-area\" className=\"booking-form\">\r\n                                <h1 className=\"text-center\">Pixel</h1>\r\n                                <form onSubmit={handleSubmit} x>\r\n                                    <div className=\"form-group \">\r\n                                        {newUser && <label for=\"exampleInputName\" className=\"col-md-12\">Name</label>}\r\n                                        {newUser && <input class=\"form-control text-dark\" type=\"text\" name=\"name\" onBlur={handleBlur} placeholder=\"Your Name\" required />}\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"exampleInputEmail1\">Email Address</label>\r\n                                        <input class=\"form-control text-dark\" type=\"text\" name=\"email\" onBlur={handleBlur} placeholder=\"Your Email Address\" required />\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"exampleInputPassword1\">Password</label>\r\n                                        <input type=\"password\" name=\"password\" onBlur={handleBlur} placeholder=\"Your Password\" class=\"form-control text-dark\" id=\"exampleInputPassword1\" required />\r\n                                    </div>\r\n                                    <div className=\"d-grid\">\r\n                                        <input className=\"btn-lg  btn-block btn-danger\" type=\"submit\" value={newUser ? 'Sign Up' : 'Sign In'} />\r\n                                    </div>\r\n                                    <div style={{marginTop: '10px'}}>\r\n                                        {newUser ?\r\n                                            <h5>Returning users: <a className=\"text-danger\" onClick={() => setNewUser(!newUser)} href=\"#\">Sign In</a></h5>\r\n                                            :\r\n                                            <h5>Not registered? Sign up <a className=\"text-danger\" onClick={() => setNewUser(!newUser)} href=\"#\">here.</a></h5>}\r\n                                    </div>\r\n                                </form>\r\n\r\n                                <p style={{ color: 'red' }}>{user.error}</p>\r\n                                {user.success && <p style={{ color: 'green' }}>User {newUser ? 'Account created' : 'Logged In'} successfully</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center pt-5\">\r\n                            <button style={{ width: \"380px\" }} onClick={googleSignIn} className=\"btn btn-danger btn-block btn-lg mt-1\"><FontAwesomeIcon icon={faUserPlus} /> Sign In With Google </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <lottie-player src=\"https://assets5.lottiefiles.com/packages/lf20_AXoQyR.json\"\r\n                            background=\"transparent\"\r\n                            speed=\"1\"\r\n                            style={{ height: \"600px\" }}\r\n                            loop\r\n                            autoplay>\r\n                        </lottie-player>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Home/Home/Home.js",[],"/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/PrivateRoute/PrivateRoute.js",["83"],"import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { UserContext } from '../../App';\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext)\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                loggedInUser.email ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/signedIn\",\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\n\r\nexport default PrivateRoute;","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/AddImage/AddImage.js",["84","85"],"import React, { useContext, useState } from 'react';\r\nimport './AddImage.css';\r\nimport Navbar from '../Home/Navbar/Navbar';\r\nimport { storage } from '../../firebase';\r\nimport { UserContext } from '../../App';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nconst AddImage = () => {\r\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n  console.log(\"Beacuse Test\", loggedInUser);\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [image, setImage] = useState(null);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  var storageRef = storage.ref();\r\n\r\n  const handleChange = e => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {\r\n        const progress = Math.ceil(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(progress);\r\n      },\r\n      error => {\r\n        // console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setUrl(url);\r\n          });\r\n      }\r\n    );\r\n\r\n\r\n    const gettingFormPart = document.getElementById('uploadImage');\r\n    const hidingImagePart = document.getElementById('imagePart');\r\n    gettingFormPart.style.display = 'none';\r\n    hidingImagePart.style.display = 'block';\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    var desertRef = storageRef.child(`images/${image.name}`);\r\n    desertRef.delete().then(() => {\r\n      Swal.fire({\r\n        position: 'center',\r\n        icon: 'success',\r\n        title: 'Your image has been deleted',\r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      })\r\n    }).catch((error) => {\r\n      // console.log(error);\r\n    });\r\n  }\r\n\r\n  const handlePrivate = () => {\r\n    fetch('http://localhost:3002/addPrivate', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        imageName: image.name,\r\n        url,\r\n        email: loggedInUser.email,\r\n        title\r\n      })\r\n    })\r\n    Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Your image has been uploaded',\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    })\r\n  }\r\n\r\n  const handleCommunity = () => {\r\n    fetch('http://localhost:3002/addCommunity', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        imageName: image.name,\r\n        url,\r\n        email: loggedInUser.email,\r\n        title\r\n      })\r\n\r\n    })\r\n    Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Your image has been uploaded',\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    })\r\n  }\r\n\r\n  return (\r\n    <section data-testid=\"test-addImage\">\r\n      <Navbar />\r\n      <div style={{ position: \"relative\", paddingTop: '50px', background: \"#12161f\", height: \"910px\" }} className=\"addImage\">\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\"\r\n          }}\r\n          className=\"container text-center\">\r\n\r\n\r\n        </div>\r\n\r\n        <form id=\"uploadImage\" className=\"container\">\r\n          <h1 className=\"text-center text-light pb-5\">Please Click On The Button To Upload Your Image</h1>\r\n          <div className=\"form-row d-flex justify-content-center\">\r\n            <div className=\"input-group input-group-lg col-6\">\r\n              <input onChange={handleChange} type=\"file\" className=\"form-control pt-1\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-lg\" />\r\n            </div>\r\n\r\n            <div className=\"col-1 \">\r\n              <button style={{ padding: '11px' }} onClick={handleUpload} type=\"button\" className=\"btn btn-danger\">Upload</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <div style={{ display: 'none' }} id=\"imagePart\" className=\" my-3 container text-center\">\r\n\r\n          <img src={url} className=\"card-img-top text-center pb-5\" alt={title} style={{ width: '30%', height: 'auto' }} />\r\n          <div className=\"row pb-5\">\r\n            <div className=\"input-group my-3 w-50 text-center col-5 \">\r\n              <input onChange={(e) => { setTitle(e.target.value) }} type=\"text\" className=\"form-control border border-danger\" placeholder=\"Image Title\" aria-label=\"Image Title\" aria-describedby=\"button-addon2\" />\r\n            </div>\r\n            <div className=\"input-group my-3 w-50 text-center col-10 \">\r\n              <button onClick={handlePrivate} className=\"btn btn-outline-danger text-light ml-3\" type=\"button\" id=\"button-addon2\"> Add to Private Collection </button>\r\n              <button onClick={handleCommunity} className=\"btn btn-outline-danger ml-3 col-2 text-light\" type=\"button\"> Post Publicly </button>\r\n              <button onClick={handleDelete} className=\"btn btn-outline-danger ml-3 col-2 text-light\" type=\"button\"> Delete </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddImage;\r\n","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Dashboard/PrivateImg.js",[],"/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Dashboard/PublicImg.js",[],"/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Login/firebase.config.js",[],"/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Login/LoginForm.js",[],"/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Home/Navbar/Navbar.js",["86"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport logo from '../../../images/icon.png';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div data-testid=\"test-Navbar\" className=\"full-container\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light p-0 bg-dark \">\r\n                <div className=\"container-fluid text-light\">\r\n                    <Link className=\"navbar-brand d-flex align-items-center\" to=\"/\">\r\n                        <img src={logo} alt=\"Icon\" className=\"logo\" style={{ width: '50px' }} />\r\n                        <h1 className=\"pl-3 text-light\">Pixel</h1>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger ml-3\"><Link to=\"/addImage\" className=\"text-light\"> Upload Image </Link></button>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNavAltMarkup\">\r\n                        <div className=\"navbar-nav\">\r\n                            <Link to=\"/\" className=\"nav-link active px-3 text-light h5  my-2\"> Home <span className=\"sr-only\">(current)</span> </Link>\r\n                            <a className=\"nav-link px-3 my-2\" ><Link to=\"/dashboard\" className=\"text-light h5 \">Images</Link></a>\r\n                            <button className=\"btn btn-outline-danger mx-3 my-2\" type=\"button\"> <Link to=\"/signedIn\" className=\"text-light\">Sign In</Link>  </button>\r\n                            <button className=\"btn btn-danger mx-3 my-2\"><Link to=\"/signedIn\" className=\"text-light\">Sign Up</Link></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/Home/Header/Header.js",[],"/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/GetCommunityImages/GetCommunityImages.js",["87","88"],"import React, { useEffect, useState } from 'react';\r\nimport ShowCommunityImages from '../ShowCommunityImages/ShowCommunityImages';\r\n\r\nconst GetCommunityImages = () => {\r\n    const [images, setEvents] = useState([]);\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:3002/communityImages`)\r\n            .then(res => res.json())\r\n            .then(data => setEvents(data))\r\n    }, [])\r\n\r\n    return (\r\n        <section data-testid=\"test-getCommunityImages\" className=\"services-container\">\r\n            <div className=\"text-center\">\r\n                <div className=\"form-group row d-flex justify-content-center pt-5\">\r\n                    <input type=\"\" className=\"form-control border border-danger col-5 \" placeholder=\"Type for finding images\" onChange={e => { setSearch(e.target.value) }} />\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n                <div className=\"w-100 row pb-5  justify-content-center\">\r\n                    {\r\n                        images.filter((val) => {\r\n                            if (search == \"\") {\r\n                                return val\r\n                            } else if (val.title.toLowerCase().includes(search.toLocaleLowerCase()))\r\n                                return val\r\n                        }).map(image => <ShowCommunityImages image={image}></ShowCommunityImages>)\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default GetCommunityImages;","/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/firebase/index.js",[],"/Users/akshath/OneDrive - University of Waterloo/Pixel/pixel/src/components/ShowCommunityImages/ShowCommunityImages.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":8,"column":26,"nodeType":"95","messageId":"96","endLine":8,"endColumn":41},{"ruleId":"93","severity":1,"message":"97","line":21,"column":12,"nodeType":"95","messageId":"96","endLine":21,"endColumn":24},{"ruleId":"98","severity":1,"message":"99","line":119,"column":66,"nodeType":"100","endLine":119,"endColumn":139},{"ruleId":"98","severity":1,"message":"99","line":121,"column":73,"nodeType":"100","endLine":121,"endColumn":146},{"ruleId":"93","severity":1,"message":"94","line":6,"column":26,"nodeType":"95","messageId":"96","endLine":6,"endColumn":41},{"ruleId":"93","severity":1,"message":"94","line":10,"column":24,"nodeType":"95","messageId":"96","endLine":10,"endColumn":39},{"ruleId":"93","severity":1,"message":"101","line":16,"column":10,"nodeType":"95","messageId":"96","endLine":16,"endColumn":18},{"ruleId":"98","severity":1,"message":"102","line":22,"column":29,"nodeType":"100","endLine":22,"endColumn":64},{"ruleId":"103","severity":1,"message":"104","line":24,"column":45,"nodeType":"105","messageId":"106","endLine":24,"endColumn":47},{"ruleId":"107","severity":1,"message":"108","line":25,"column":40,"nodeType":"109","messageId":"110","endLine":25,"endColumn":42},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'setLoggedInUser' is assigned a value but never used.","Identifier","unusedVar","'loggedInUser' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'progress' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]